/* General styling */
* {
    box-sizing: border-box;
    font-family: 'Euclid Circular A', sans-serif;
    color: #333333;
    font-size: 14px;
}

.circled {
    border: 2px solid #333333;
    font-size: 22px;
    border-radius: 16px;
    padding: 6px;
}


html,
body,
h1,
h2 {
    margin: 0;
    padding: 0;
}

.config-content {
    padding-left: 32px;
    padding-right: 32px;
}

body {
    background-color: #ffffff;
    font-family: 'Euclid Circular A', sans-serif;
    color: #333333;
}

.config-header {
    height: 72px;
    background-color: #FCFAF8;
    padding: 8px;
    margin-bottom: 32px;
    position: -webkit-sticky;
    /* For Safari compatibility */
    position: sticky;
    top: 0;
    /* Set the top position to 0 so it sticks to the top of the page */
    z-index: 1000;
    /* Ensure it sits above the other content */
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.06);
    /* Add shadow */

}

.config-header-inner {
    width: fit-content;
    margin-left: auto;
    margin-right: auto;
    height: 100%;

}

.config-logo {
    height: 100%;
    float: left;
    text-align: right;
    margin-right: 6px;
}

.config-title {
    text-align: left;
    font-size: 22px;
    vertical-align: middle;
    margin-left: 6px;
    float: left;
    line-height: 56px;
}

/* Table styling */
table {
    border-collapse: collapse;
    width: 100%;
    background-color: #FFFFFF;
    /* Changed to white */
    margin-bottom: 40px;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    /* Subtle shadow for the table */
    border-radius: 4px;
    /* Rounded edges for the table */
}

th,
td {
    border: 1px solid #f8f8f8;
    vertical-align: middle;
    text-align: center;
}

th {
    background-color: #d2d2d2;
    color: #333333;
    border: 1px solid #f8f8f8;
    padding: 12px 16px;

}



td {
    border: 1px solid #f8f8f8;
    padding-left: 8px;
    padding-right: 8px;
    height: 56px;
   
 

    /* Use this if you also want horizontal centering */

}

td img{
    vertical-align: middle;
}

/* Table titles */
.table-title {
    font-size: 24px;
    font-weight: bold;
    color: #333333;
    text-align: left;


}




/* Button styling */
button {
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s;
}

.row-icon {
    cursor: pointer;
    margin-left: 8px;
    margin-right: 8px;
    color: #d2d2d2;
    width: 24px;
}





/* Additional styles for better presentation */
#widgetInstancesTable,
#widgetBrandsTable {
    margin-top: 40px;
}

button {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

td.actions button {
    display: inline-block;
    margin-right: 10px;
}

td.actions button:last-child {
    margin-right: 0;
}


th.active,
td.active {
    width: 80px;
    /* Adjust this width based on your needs for the "Active" column */
    text-align: center;
    /* Center the content for better presentation */
}

th.actions,
td.actions {
    width: 200px;
    /* Adjust this width based on your needs for the "Actions" column */
    text-align: center;
    /* Center the content for better presentation */
}

td.actions button {
    margin-top: 12px;
    margin-bottom: 12px;
    width: 80px;
}



.img-logo-preview {
    max-width: 64px;
    /* or whatever size you prefer */
    max-height: 32px;
}


.row-icon:hover {
    filter: brightness(80%);
}

.row-icon:active {
    filter: brightness(60%);
}

button:hover {
    filter: brightness(80%);
}

button:active {
    filter: brightness(60%);
}

.first-table-header {
    margin-top: 32px !important;
}

.disabled {
    pointer-events: none;
}

.color-picker {
    border: none;
    width: 140px;
}


.hidden-table {
    display: none;
}

.col-actions,
.col-active-flag {
    width: 100px;
    /* This makes the column as narrow as possible */
    white-space: nowrap;
    /* This ensures the content does not wrap */
    user-select: none;
}

.col-dropdown-select,
.col-color-select,
.col-image, .col-open-delay {
    width: 160px;
    /* This makes the column as narrow as possible */
    white-space: nowrap;
    /* This ensures the content does not wrap */
    user-select: none;
}

.col-image{
    max-width: 160px;
    overflow: scroll;
}







.checkbox-round {
    position: relative;
}

.checkbox-round label {
    background-color: #fff;
    border: 2px solid #d2d2d2;
    border-radius: 50%;
    cursor: pointer;
    height: 20px;
    left: 0;
    position: absolute;
    top: 0;
    width: 20px;
    pointer-events: none;
}

.checkbox-round label:after {
    border: 2px solid #fff;
    border-top: none;
    border-right: none;
    content: "";
    height: 6px;
    left: 2px;
    opacity: 0;
    position: absolute;
    top: 3px;
    transform: rotate(-45deg);
    width: 10px;
}

.checkbox-round input[type="checkbox"] {
    visibility: hidden;
}

.checkbox-round input[type="checkbox"]:checked+label {
    background-color: #4DAA57;
    border-color: #4DAA57;
}

.checkbox-round input[type="checkbox"]:checked+label:after {
    opacity: 1;
}


.checkbox-container {
    display: flex;
    /* Use flexbox to align children */
    justify-content: center;
    /* Center horizontally */
    align-items: center;
    /* Center vertically */
    height: 100%;
    /* Take full height of the parent */
}

.checkbox-round input[type="checkbox"] {
    pointer-events: none;
    /* Disable clicking by default */
    /* ...other styles... */
}

/* Add a class to allow clicking when the row is editable */
.checkbox-round label.clickable {
    pointer-events: auto;
}

.color-select {
    width: 120px !important;
    border: none;
    height: 24px;

}

.highlight {
    background-color: #C3DBFE;
}






.table-control {
    display: flex;
    /* Use flexbox for .table-control children as well */
    align-items: center;
    /* Align buttons in the middle vertically */
}

/* If your .table-control elements are not already grouped together,
     you will need an additional container around them. */

/* Additional container for all table-control elements (if needed) */
.table-control-group {
    display: flex;
    gap: 10px;
    /* You can set the gap between buttons here */
}



.table-header-wrapper {
    border-bottom: 1px solid #d2d2d2;
    display: flex;
    /* Add this */
    justify-content: space-between;
    /* Optional: If you want to space them apart */
    align-items: center;
    flex-wrap: wrap;
    /* Optional: If you want to vertically center them */
    padding-bottom: 8px;
    margin-bottom: 16px;
    margin-top: 64px;
    gap: 16px;
}




.config-button {
    height: 48px;
    background-color: #d2d2d2;

}

.config-button i {
    color: #333333;
}



/* Set the initial state of the search input with a width of 0 */
.table-search-input {
    width: 0;
    opacity: 0;
    visibility: hidden;
    transition: width 0.5s ease, opacity 0.5s ease, visibility 0.5s;
    height: 48px;
    border-radius: 4px;
    border: 2px solid #d2d2d2;
    border-right: none;
    border-top-right-radius: 0px;
    border-bottom-right-radius: 0px;
    border-right: none;
    outline: none; /* Removes the default focus outline */
    /* Add other properties like padding or border as needed to match your design when visible */
}

.table-search-input:focus{
    box-shadow: inset 0 0 0 2px #C3DBFE; /* Inner focus border */
  }

/* When the search input is toggled, set the width, opacity, and visibility for it to be fully shown */
.show-search-input {
    width: 200px;
    /* Adjust to the desired width */
    opacity: 1;
    visibility: visible;
    /* Restore padding, border, etc., to match the input's appearance when it's fully visible */
}

.search-button {
    transition: border-bottom-left-radius 0.5s ease, border-top-left-radius 0.5s ease;
}


.search-button-open {
    border-bottom-left-radius: 0px;
    border-top-left-radius: 0px;
    transition: border-bottom-left-radius 0s ease, border-top-left-radius 0s ease;

}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(-360deg);
    }
}

.spin-animation {
    animation: spin 0.5s ease-in-out;
}


@keyframes bounce {

    0%,
    50%,
    100% {
        transform: translateY(0);
    }

    25% {
        transform: translateY(-8px);
    }

    75% {
        transform: translateY(-4px);
    }
}

.bounce-animation {
    animation: bounce 0.5s ease;
}

@keyframes grow-shrink {

    0%,
    100% {
        transform: scale(1);
        /* Original size */
    }

    50% {
        transform: scale(1.25);
        /* 1.5 times the original size */
    }
}

.zoom-animation {
    animation: grow-shrink 0.5s ease-in-out;
}

.warning-container {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%; /* Adjust width as needed */
    max-width: 500px; /* Maximum width of the container */
    background: #fff;
    padding: 48px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    z-index: 1000; /* Above the overlay */
    text-align: center; /* Center the text */
    border-radius: 10px; /* Rounded corners */
    border: 2px solid #721121; /* Red border for caution */
    display: none;
  }
  
  .warning-content-wrapper {
    margin-bottom: 20px; /* Space above the buttons */
  }
  
  .warning-header {
    font-size: 24px; /* Large, noticeable text */
    color: #721121; /* Red color for warning */
    font-weight: bold;
  }
  
  .warning-text {
    font-size: 16px; /* Readable text size */
    margin-top: 24px;
    margin-bottom: 32px;
  }
  
  /* Button styles */
  .warning-button {
    padding: 10px 20px;
    margin: 0 16px; /* Space between buttons */
    font-size: 18px;
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease;
    height: 60px;
    width: 140px;
  }
  
  .proceed-button {
    background-color: #721121; /* Red color for the proceed button to indicate danger */
    color: #ffffff;
  }
  

  
  .cancel-button {
    background-color: #d2d2d2; /* Neutral color for the cancel button */
    color: #333333;
  }
  
 
  
  /* Button container styles, if you decide to wrap buttons */
  .button-container {
    display: flex;
    justify-content: center; /* Center buttons horizontally */
  }

  .overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5); /* Black background with opacity */
    z-index: 999; /* Make sure this is less than the z-index of the warning-container */
    display: none;
    backdrop-filter: blur(5px); /* Blur the content behind the overlay */
  }

  

  